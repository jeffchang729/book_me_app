# === Flutter 開發過程中產生的暫存資料，不需要加入版本控制 ===
.dart_tool/           # Dart 執行與分析工具使用的資料夾
.packages             # Flutter 相依套件映射，會自動產生
.pub-cache/           # 套件快取，建議每台機器自己處理
.flutter-plugins      # 已安裝 plugin 的記錄檔，自動產生
.flutter-plugins-dependencies
.melos_tool/          # 使用 melos monorepo 管理時會產生的資料夾
.metadata             # Flutter 專案的基本資訊檔案，自動產生
.buildlog             # 建置過程的日誌，無需版本控制

# === Dart 編譯後的資料，會自動產生，不需 commit ===
build/                # Flutter 編譯輸出資料夾（Android / iOS / Web 等）

# === Android Gradle 相關資料夾與輸出 ===
android/.gradle/      # Gradle 的快取資料
android/app/build/    # Android 專案建置產物

# === Xcode / macOS 編譯相關輸出 ===
ios/Flutter/Generated.xcconfig
macos/Flutter/Generated.xcconfig

# === VSCode / Android Studio 設定檔，不要加入版本控制 ===
.idea/                # Android Studio 或 IntelliJ 設定資料夾
.vscode/              # VSCode 的個人工作設定
*.iml                 # IntelliJ 的模組檔案

# === Flutter web 特殊設定（如使用 Web）===
# 根據專案情況決定是否要版本控制 web/ 裡的檔案

# === Firebase 設定檔：只保留正確位置，其餘忽略 ===
google-services.json       # 忽略根目錄的
!android/app/google-services.json  # 但保留 Android 專案內正確位置的設定檔

# === CORS 設定：如果你想保留 cors.json，可以註解掉這行 ===
# cors.json

# === Flutter 相依套件鎖定檔案（可版本控制）===
# pubspec.lock 通常建議一起版本控制，除非是套件 library 而非 app
